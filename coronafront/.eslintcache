[{"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\index.js":"1","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js":"2","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\App.js":"3","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js":"4","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js":"5","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js":"6","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js":"7","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js":"8","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Functions.js":"9"},{"size":517,"mtime":1615535995020,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1615535995832,"results":"12","hashOfConfig":"11"},{"size":1892,"mtime":1621326852359,"results":"13","hashOfConfig":"11"},{"size":1712,"mtime":1615978810813,"results":"14","hashOfConfig":"11"},{"size":2605,"mtime":1615535995718,"results":"15","hashOfConfig":"11"},{"size":2036,"mtime":1615982918230,"results":"16","hashOfConfig":"11"},{"size":7809,"mtime":1621495848048,"results":"17","hashOfConfig":"11"},{"size":2188,"mtime":1615535995635,"results":"18","hashOfConfig":"11"},{"size":9261,"mtime":1621499520822,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"pw37vz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\index.js",[],["43","44"],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\App.js",["45","46","47","48","49","50","51","52","53","54"],"import React, { useState } from 'react';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport User from './pages/User'\r\nimport Login from './pages/Login'\r\nimport Admin from './pages/Admin'\r\nimport Charts from './pages/Charts'\r\n\r\nimport SwitchMUI from './pages/SwitchMUI';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides:{\r\n      MuiExpansionPanelSummary: {\r\n          root: {\r\n              backgroundColor: '#2D2D2D',\r\n              borderBottom: '1px solid #151515',\r\n              minHeight: 20,\r\n              marginBottom: -5,\r\n              '&$expanded': {\r\n                minHeight: 20,\r\n              }   \r\n          },\r\n            content: {\r\n              '&$expanded': {\r\n                margin: '12px 0',\r\n              }\r\n          }\r\n      },\r\n      MuiExpansionPanelDetails: {\r\n          root:{\r\n              backgroundColor: '#262626',\r\n              paddingBottom: 8,\r\n              paddingTop: 10,\r\n          }\r\n      }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState();\r\n  const [type, setType] = useState();\r\n\r\n/*   if(!token){\r\n  return(    \r\n    <MuiThemeProvider theme={ theme }>\r\n      <CssBaseline />\r\n      <Login setToken={setToken} setType={setType}/>\r\n    </MuiThemeProvider>\r\n  );\r\n  }\r\n */\r\n  return(\r\n      <MuiThemeProvider theme={ theme }>\r\n          <BrowserRouter>\r\n            <div>\r\n              <CssBaseline />\r\n              <SwitchMUI/>\r\n                <Switch>\r\n                  <Route exact path='/' render={(props) => <Charts/> }/>\r\n                </Switch> \r\n            </div>\r\n          </BrowserRouter>\r\n      </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js",["55","56","57","58","59","60","61","62"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction Admin() {\r\n\r\n    const [Logins, setLogins] = React.useState([]);\r\n    const [error, setError] = React.useState('Searching...');\r\n\r\n    const fetchUrl = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/user');\r\n            const json = await response.json();\r\n            setLogins(json);\r\n            setError('');\r\n\r\n        } catch(error) {\r\n            setLogins([]);\r\n            setError('Something went wrong :(');\r\n        }\r\n}\r\n        React.useEffect( () => { fetchUrl() }, []);\r\n\r\n        if (error.length > 0) {\r\n            return(\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                    <p>{ error }</p>\r\n                </Grid>\r\n            );\r\n        }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={4}>\r\n                \r\n                <h2>ADMIN</h2>\r\n\r\n                </Grid>\r\n                </Grid>\r\n                </div>\r\n                    \r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js",["63"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction User() {\r\n\r\n    const [user, setUser] = React.useState([]);\r\n\r\n    const getData = async () => {\r\n        fetch('http://localhost:8080/user')\r\n        .then(res => res.text())\r\n        .then(res => setUser({message: res}));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user.map( user =>{\r\n                    return(\r\n                        <div>\r\n                        <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={4}>\r\n                            \r\n                        <ExpansionPanel>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography>\r\n                                    {user.name}\r\n                                </Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Grid container alignItems=\"center\" justify=\"center\">\r\n                                <Grid item xs={11}>\r\n                                    <Typography>\r\n                                        Health: { user.health }\r\n                                    </Typography>\r\n                                </Grid>\r\n                            \r\n                                <Grid item xs={1}>\r\n                                    <IconButton aria-label=\"edit\" >\r\n                                        <EditIcon style={{ color: '#FFFFFF' }}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </Grid>\r\n                        </Grid>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js",["64","65"],"import React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { Button } from '@material-ui/core';\r\nimport * as Functions from './Functions'\r\n\r\n//Test data provided by Trento\r\n//import name from 'location'\r\n//import DataJson from '../data/csvjson.json'\r\n\r\n//Csv use\r\nimport { CSVLink } from \"react-csv\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\n\r\n//Main function of Charts.js\r\nfunction Charts() {\r\n//React useState which receives uploaded CSV \r\n    const [uploadData, setUploadData] = React.useState([{\r\n        \"name\": \"Dummy\",\r\n        \"time\": 1614944496619605500,\r\n        \"room\": \"dummy\",\r\n        \"tagID\": 1,\r\n        \"x\": 2,\r\n        \"y\": 3\r\n    }])\r\n//Simple function to set given data into set useState\r\n    const handleData = (data, fileInfo) => setUploadData(data);\r\n    \r\n    const papaparseOptions = {\r\n      header: true,\r\n      dynamicTyping: true,\r\n      skipEmptyLines: true,\r\n      transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n    };\r\n  \r\n\r\n    //Functions.\r\n//setState for datepicker, picking new time points to use\r\n    const [readyData, setReadyData] = React.useState([]);\r\n\r\n    const [trimmedData, setTrimmedData] = React.useState([]);\r\n//useEffect activates each time uploadData is updated, sets data into trimmed state after using trimData function which reduces the data points\r\n//by minutes, eliminating the rest.\r\n    useEffect(() => { setTrimmedData(Functions.trimData(uploadData)) }, [uploadData]);\r\n\r\n//useStates for managing the earliest and latest time points, showing on datepicker  \r\n    const [earliest, setEarliest] = React.useState()\r\n    const [latest, setLatest] = React.useState()\r\n\r\n//useEffect activates each time uploadData is updated\r\n    useEffect(() => { minmaxTime() }, [uploadData]);\r\n\r\n//Function to dig the data for first and last time points\r\n    const minmaxTime = () => {\r\n        let i;\r\n        let min = uploadData[0];\r\n        let max = uploadData[0];\r\n        for (i = 0; i < uploadData.length; i++) {\r\n\r\n            if (uploadData[i].time < min.time) {\r\n                min = uploadData[i]\r\n            }\r\n            else if (uploadData[i].time > max.time) {\r\n                max = uploadData[i]\r\n            }\r\n        }\r\n        setEarliest(new Date(min.time / 1000000));\r\n        setLatest(new Date(max.time / 1000000)); \r\n    }\r\n\r\n//function activates with the filter button, uses time points user picked with time picker\r\n    const filterData = () => {\r\n        let thisdata = trimmedData.filter(trimmedData => earliest <= new Date(trimmedData.time / 1000000));\r\n        thisdata = thisdata.filter(thisdata => latest >= new Date(thisdata.time / 1000000));\r\n        setReadyData(thisdata);\r\n    }\r\n//Scatter chart usage\r\n    const data = {\r\n        labels: ['Scatter'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                fill: true,\r\n                backgroundColor: 'rgba(0,0,160,0.4)',\r\n                pointBorderColor: 'rgba(0,0,160,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 3,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: trimmedData,\r\n                options: {\r\n                    tooltips: {\r\n                        mode: 'index'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n//Main returns of Chart.js\r\n    return (\r\n        <div>\r\n            \r\n                <div>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        <Grid container item xs={12} spacing={3} justify=\"center\" style={{ marginRight: 100 }}>\r\n                            <Grid item xs={8}>\r\n                                <h2>Charts</h2>\r\n                                <Scatter data={data} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ margin: 5 }}>\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Earliest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setEarliest}\r\n                                    value={earliest}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Latest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setLatest}\r\n                                    value={latest}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n                            <Grid item xs={6} style={{ backgroundColor: \"white\" }}>\r\n                                <CSVReader\r\n                                    cssClass=\"react-csv-input\"\r\n                                    label=\"Select CSV data to parse. \"\r\n                                    onFileLoaded={handleData}\r\n                                    parserOptions={papaparseOptions}\r\n                                />                                \r\n                            </Grid>\r\n\r\n                            <Grid container item xs={4} spacing={1} direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                                <Grid item xs={4}>\r\n                                    <Button onClick={filterData} color=\"primary\" variant=\"contained\">\r\n                                        filter\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <CSVLink\r\n                                    /* immediate run why? */\r\n                                        data = {Functions.checkRisk(trimmedData)}\r\n                                        headers={[\r\n                                            {label: 'Distance', key: 'dist'},\r\n                                            {label: 'Person 1', key: 'person1'},\r\n                                            {label: 'Person 2', key: 'person2'},\r\n                                            {label: 'Time', key: 'time'},\r\n                                            {label: 'Room of Person 1', key: 'room1'},\r\n                                            {label: 'Room of Person 2', key: 'room2'},\r\n                                            {label: 'Risk', key: 'risk'},\r\n                                        ]}\r\n                                        filename={\"Risks.csv\"}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Download Data CSV\r\n                                    </CSVLink>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n//Exporting the results to use\r\nexport default Charts","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Functions.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":26,"nodeType":"73","messageId":"74","endLine":2,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":2,"column":38,"nodeType":"73","messageId":"74","endLine":2,"endColumn":51},{"ruleId":"71","severity":1,"message":"76","line":5,"column":40,"nodeType":"73","messageId":"74","endLine":5,"endColumn":48},{"ruleId":"71","severity":1,"message":"77","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":12},{"ruleId":"71","severity":1,"message":"78","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":13},{"ruleId":"71","severity":1,"message":"79","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":13},{"ruleId":"71","severity":1,"message":"80","line":42,"column":10,"nodeType":"73","messageId":"74","endLine":42,"endColumn":15},{"ruleId":"71","severity":1,"message":"81","line":42,"column":17,"nodeType":"73","messageId":"74","endLine":42,"endColumn":25},{"ruleId":"71","severity":1,"message":"82","line":43,"column":10,"nodeType":"73","messageId":"74","endLine":43,"endColumn":14},{"ruleId":"71","severity":1,"message":"83","line":43,"column":16,"nodeType":"73","messageId":"74","endLine":43,"endColumn":23},{"ruleId":"71","severity":1,"message":"84","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"85","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":22},{"ruleId":"71","severity":1,"message":"86","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":29},{"ruleId":"71","severity":1,"message":"87","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":29},{"ruleId":"71","severity":1,"message":"88","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":22},{"ruleId":"71","severity":1,"message":"89","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":18},{"ruleId":"71","severity":1,"message":"90","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":16},{"ruleId":"71","severity":1,"message":"91","line":13,"column":12,"nodeType":"73","messageId":"74","endLine":13,"endColumn":18},{"ruleId":"71","severity":1,"message":"92","line":15,"column":11,"nodeType":"73","messageId":"74","endLine":15,"endColumn":18},{"ruleId":"71","severity":1,"message":"93","line":42,"column":12,"nodeType":"73","messageId":"74","endLine":42,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":54,"column":39,"nodeType":"96","endLine":54,"endColumn":51,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":62,"column":31,"nodeType":"100","messageId":"101","endLine":62,"endColumn":33},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'Redirect' is defined but never used.","'User' is defined but never used.","'Login' is defined but never used.","'Admin' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'Typography' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'Logins' is assigned a value but never used.","'getData' is assigned a value but never used.","'readyData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'minmaxTime'. Either include it or remove the dependency array.","ArrayExpression",["104"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [minmaxTime, uploadData]",{"range":"107","text":"108"},[1931,1943],"[minmaxTime, uploadData]"]