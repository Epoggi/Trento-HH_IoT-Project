[{"C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\index.js":"1","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js":"2","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\App.js":"3","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js":"4","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js":"5","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js":"6","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js":"7","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js":"8","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Functions.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1892,"mtime":1621240309941,"results":"13","hashOfConfig":"11"},{"size":2605,"mtime":1612962282782,"results":"14","hashOfConfig":"11"},{"size":2036,"mtime":1613637846601,"results":"15","hashOfConfig":"11"},{"size":1712,"mtime":1616744952511,"results":"16","hashOfConfig":"11"},{"size":9225,"mtime":1621240723596,"results":"17","hashOfConfig":"11"},{"size":2188,"mtime":1612961385819,"results":"18","hashOfConfig":"11"},{"size":10078,"mtime":1621492144949,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1j42ybv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\index.js",[],["43","44"],"C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js",[],"C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\App.js",["45","46","47","48","49","50","51","52","53","54"],"import React, { useState } from 'react';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport User from './pages/User'\r\nimport Login from './pages/Login'\r\nimport Admin from './pages/Admin'\r\nimport Charts from './pages/Charts'\r\n\r\nimport SwitchMUI from './pages/SwitchMUI';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides:{\r\n      MuiExpansionPanelSummary: {\r\n          root: {\r\n              backgroundColor: '#2D2D2D',\r\n              borderBottom: '1px solid #151515',\r\n              minHeight: 20,\r\n              marginBottom: -5,\r\n              '&$expanded': {\r\n                minHeight: 20,\r\n              }   \r\n          },\r\n            content: {\r\n              '&$expanded': {\r\n                margin: '12px 0',\r\n              }\r\n          }\r\n      },\r\n      MuiExpansionPanelDetails: {\r\n          root:{\r\n              backgroundColor: '#262626',\r\n              paddingBottom: 8,\r\n              paddingTop: 10,\r\n          }\r\n      }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState();\r\n  const [type, setType] = useState();\r\n\r\n/*   if(!token){\r\n  return(    \r\n    <MuiThemeProvider theme={ theme }>\r\n      <CssBaseline />\r\n      <Login setToken={setToken} setType={setType}/>\r\n    </MuiThemeProvider>\r\n  );\r\n  }\r\n */\r\n  return(\r\n      <MuiThemeProvider theme={ theme }>\r\n          <BrowserRouter>\r\n            <div>\r\n              <CssBaseline />\r\n              <SwitchMUI/>\r\n                <Switch>\r\n                  <Route exact path='/' render={(props) => <Charts/> }/>\r\n                </Switch> \r\n            </div>\r\n          </BrowserRouter>\r\n      </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js",["55"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction User() {\r\n\r\n    const [user, setUser] = React.useState([]);\r\n\r\n    const getData = async () => {\r\n        fetch('http://localhost:8080/user')\r\n        .then(res => res.text())\r\n        .then(res => setUser({message: res}));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user.map( user =>{\r\n                    return(\r\n                        <div>\r\n                        <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={4}>\r\n                            \r\n                        <ExpansionPanel>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography>\r\n                                    {user.name}\r\n                                </Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Grid container alignItems=\"center\" justify=\"center\">\r\n                                <Grid item xs={11}>\r\n                                    <Typography>\r\n                                        Health: { user.health }\r\n                                    </Typography>\r\n                                </Grid>\r\n                            \r\n                                <Grid item xs={1}>\r\n                                    <IconButton aria-label=\"edit\" >\r\n                                        <EditIcon style={{ color: '#FFFFFF' }}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </Grid>\r\n                        </Grid>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js",[],"C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js",["56","57","58","59","60","61","62","63"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction Admin() {\r\n\r\n    const [Logins, setLogins] = React.useState([]);\r\n    const [error, setError] = React.useState('Searching...');\r\n\r\n    const fetchUrl = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/user');\r\n            const json = await response.json();\r\n            setLogins(json);\r\n            setError('');\r\n\r\n        } catch(error) {\r\n            setLogins([]);\r\n            setError('Something went wrong :(');\r\n        }\r\n}\r\n        React.useEffect( () => { fetchUrl() }, []);\r\n\r\n        if (error.length > 0) {\r\n            return(\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                    <p>{ error }</p>\r\n                </Grid>\r\n            );\r\n        }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={4}>\r\n                \r\n                <h2>ADMIN</h2>\r\n\r\n                </Grid>\r\n                </Grid>\r\n                </div>\r\n                    \r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { Button } from '@material-ui/core';\r\nimport DataJson from '../data/csvjson.json'\r\nimport * as Functions from './Functions'\r\nimport { CSVLink } from \"react-csv\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\n//drawer komponentit\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n//Summary list komponentti\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nfunction Charts() {\r\n    \r\n    const [uploadData, setUploadData] = React.useState()\r\n\r\n    const handleData = (data, fileInfo) => setUploadData(data);\r\n    \r\n    const papaparseOptions = {\r\n      header: true,\r\n      dynamicTyping: true,\r\n      skipEmptyLines: true,\r\n      transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n    };\r\n  \r\n\r\n    //Functions.\r\n\r\n    const [readyData, setReadyData] = React.useState([]);\r\n\r\n    const trentodata = DataJson;\r\n    const [trimmedData, setTrimmedData] = React.useState([]);\r\n    useEffect(() => { setTrimmedData(Functions.trimData(trentodata)) }, []);  \r\n  \r\n    //{overall risk levels, close contact situations, directional contact:[{face to face, shoulder to shoulder, ...}]}\r\n    const summary = []\r\n\r\n    //create an array {tagId: i, route: {time: t, x: z, y: z}}\r\n    /*\r\n        const users = () => {\r\n            let i;\r\n            for(i = 0; i < trentodata.length-1; i++){\r\n                //if tagID not on list, push tagID into routeData.tagID && route info\r\n                //else if tagID on list, push route info\r\n                if (trentodata[i].tagID )\r\n        }}\r\n    */\r\n\r\n    let risks = []\r\n\r\n    let roomrisk = \"\";\r\n\r\n    let individualrisk = [];\r\n\r\n    //mahd. spread notaatio. Laskeminen for loopin sisällä. HashMap, hajautus algoritmi.\r\n    /* \r\n    const [earliest, setEarliest] = React.useState(new Date(Math.min(...trentodata.map(e => new Date(e.time/1000000)))));\r\n    const [latest, setLatest] = React.useState(new Date(Math.max(...trentodata.map(e => new Date(e.time/1000000))))); \r\n    */\r\n    const [earliest, setEarliest] = React.useState()\r\n    const [latest, setLatest] = React.useState()\r\n\r\n    useEffect(() => { minmaxTime() }, []);\r\n\r\n    const minmaxTime = () => {\r\n        let i;\r\n        let min = trentodata[0];\r\n        let max = trentodata[0];\r\n        for (i = 0; i < trentodata.length; i++) {\r\n\r\n            if (trentodata[i].time < min.time) {\r\n                min = trentodata[i]\r\n            }\r\n            else if (trentodata[i].time > max.time) {\r\n                max = trentodata[i]\r\n            }\r\n        }\r\n        setEarliest(new Date(min.time / 1000000));\r\n        setLatest(new Date(max.time / 1000000));\r\n    }\r\n\r\n\r\n    const filterData = () => {\r\n        let thisdata = trimmedData.filter(trimmedData => earliest <= new Date(trimmedData.time / 1000000));\r\n        thisdata = thisdata.filter(thisdata => latest >= new Date(thisdata.time / 1000000));\r\n        setReadyData(thisdata);\r\n    }\r\n\r\n/*     const calcDist = (posit1, posit2) => {\r\n        let dist1 = Math.pow((posit1.x - posit2.x), 2)\r\n        let dist2 = Math.pow((posit1.y - posit2.y), 2)\r\n\r\n        return Math.sqrt(Math.abs(dist1 + dist2))\r\n    } */\r\n\r\n    const data = {\r\n        labels: ['Scatter'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                fill: true,\r\n                backgroundColor: 'rgba(0,0,160,0.4)',\r\n                pointBorderColor: 'rgba(0,0,160,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 3,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: trimmedData,\r\n                options: {\r\n                    tooltips: {\r\n                        mode: 'index'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    const [risk, setRisk] = React.useState([])\r\n//material ui demo ->\r\n    function generate() {\r\n        return risk.map((el => {\r\n            return <ListItem primaryText={el.dist} key={el.dist}/>\r\n        }),\r\n        );\r\n      }\r\n\r\n    const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const renderlist = () => {\r\n        return (\r\n        <div>\r\n            <List dense={dense}>\r\n              {generate()}\r\n            </List>\r\n        </div>\r\n        )} \r\n    /* _renderTodos(){\r\n    return this.state.todos.map(el => {\r\n        return <ListItem primaryText={el.text} key={el.id}/>\r\n    })\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <MobileTearSheet>\r\n            <List>\r\n                {this._renderTodos()}\r\n            </List>\r\n        </MobileTearSheet>\r\n    )\r\n} */\r\n//material ui demo end.\r\n\r\n    return (\r\n        <div>\r\n            \r\n                <div>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        <Grid container item xs={12} spacing={3} justify=\"center\" style={{ marginRight: 100 }}>\r\n                            <Grid item xs={8}>\r\n                                <h2>Charts</h2>\r\n                                <Scatter data={data} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ margin: 5 }}>\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Earliest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setEarliest}\r\n                                    value={earliest}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Latest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setLatest}\r\n                                    value={latest}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n                            <Grid item xs={6} style={{ backgroundColor: \"white\" }}>\r\n                                <CSVReader\r\n                                    cssClass=\"react-csv-input\"\r\n                                    label=\"Select CSV data to parse. \"\r\n                                    onFileLoaded={handleData}\r\n                                    parserOptions={papaparseOptions}\r\n                                />                                \r\n                            </Grid>\r\n\r\n                            <Grid container item xs={4} spacing={1} direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                                <Grid item xs={4}>\r\n                                    <Button onClick={filterData} color=\"primary\" variant=\"contained\">\r\n                                        filter\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <CSVLink\r\n                                        data = {Functions.checkRisk(trimmedData)}\r\n                                        headers={[\r\n                                            {label: 'Distance', key: 'dist'},\r\n                                            {label: 'Person 1', key: 'person1'},\r\n                                            {label: 'Person 2', key: 'person2'},\r\n                                            {label: 'Time', key: 'time'},\r\n                                            {label: 'Room of Person 1', key: 'room1'},\r\n                                            {label: 'Room of Person 2', key: 'room2'},\r\n                                            {label: 'Risk', key: 'risk'},\r\n                                        ]}\r\n                                        filename={\"Risks.csv\"}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Download Data CSV\r\n                                    </CSVLink>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts","C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js",[],"C:\\Users\\joni9\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Functions.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":26,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"89","line":2,"column":38,"nodeType":"87","messageId":"88","endLine":2,"endColumn":51},{"ruleId":"85","severity":1,"message":"90","line":5,"column":40,"nodeType":"87","messageId":"88","endLine":5,"endColumn":48},{"ruleId":"85","severity":1,"message":"91","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":12},{"ruleId":"85","severity":1,"message":"92","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":13},{"ruleId":"85","severity":1,"message":"93","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":13},{"ruleId":"85","severity":1,"message":"94","line":42,"column":10,"nodeType":"87","messageId":"88","endLine":42,"endColumn":15},{"ruleId":"85","severity":1,"message":"95","line":42,"column":17,"nodeType":"87","messageId":"88","endLine":42,"endColumn":25},{"ruleId":"85","severity":1,"message":"96","line":43,"column":10,"nodeType":"87","messageId":"88","endLine":43,"endColumn":14},{"ruleId":"85","severity":1,"message":"97","line":43,"column":16,"nodeType":"87","messageId":"88","endLine":43,"endColumn":23},{"ruleId":"85","severity":1,"message":"98","line":15,"column":11,"nodeType":"87","messageId":"88","endLine":15,"endColumn":18},{"ruleId":"85","severity":1,"message":"99","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"100","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":22},{"ruleId":"85","severity":1,"message":"101","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":29},{"ruleId":"85","severity":1,"message":"102","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":29},{"ruleId":"85","severity":1,"message":"103","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":22},{"ruleId":"85","severity":1,"message":"104","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":18},{"ruleId":"85","severity":1,"message":"105","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},{"ruleId":"85","severity":1,"message":"106","line":13,"column":12,"nodeType":"87","messageId":"88","endLine":13,"endColumn":18},{"ruleId":"85","severity":1,"message":"107","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":17},{"ruleId":"85","severity":1,"message":"108","line":14,"column":8,"nodeType":"87","messageId":"88","endLine":14,"endColumn":14},{"ruleId":"85","severity":1,"message":"109","line":15,"column":8,"nodeType":"87","messageId":"88","endLine":15,"endColumn":16},{"ruleId":"85","severity":1,"message":"110","line":20,"column":8,"nodeType":"87","messageId":"88","endLine":20,"endColumn":20},{"ruleId":"85","severity":1,"message":"111","line":26,"column":12,"nodeType":"87","messageId":"88","endLine":26,"endColumn":22},{"ruleId":"85","severity":1,"message":"112","line":40,"column":12,"nodeType":"87","messageId":"88","endLine":40,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":44,"column":73,"nodeType":"115","endLine":44,"endColumn":75,"suggestions":"116"},{"ruleId":"85","severity":1,"message":"117","line":47,"column":11,"nodeType":"87","messageId":"88","endLine":47,"endColumn":18},{"ruleId":"85","severity":1,"message":"118","line":60,"column":9,"nodeType":"87","messageId":"88","endLine":60,"endColumn":14},{"ruleId":"85","severity":1,"message":"119","line":62,"column":9,"nodeType":"87","messageId":"88","endLine":62,"endColumn":17},{"ruleId":"85","severity":1,"message":"120","line":64,"column":9,"nodeType":"87","messageId":"88","endLine":64,"endColumn":23},{"ruleId":"113","severity":1,"message":"121","line":74,"column":39,"nodeType":"115","endLine":74,"endColumn":41,"suggestions":"122"},{"ruleId":"85","severity":1,"message":"123","line":133,"column":18,"nodeType":"87","messageId":"88","endLine":133,"endColumn":25},{"ruleId":"85","severity":1,"message":"124","line":142,"column":19,"nodeType":"87","messageId":"88","endLine":142,"endColumn":27},{"ruleId":"85","severity":1,"message":"125","line":143,"column":12,"nodeType":"87","messageId":"88","endLine":143,"endColumn":21},{"ruleId":"85","severity":1,"message":"126","line":143,"column":23,"nodeType":"87","messageId":"88","endLine":143,"endColumn":35},{"ruleId":"85","severity":1,"message":"127","line":145,"column":11,"nodeType":"87","messageId":"88","endLine":145,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'Redirect' is defined but never used.","'User' is defined but never used.","'Login' is defined but never used.","'Admin' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'getData' is assigned a value but never used.","'Typography' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'Logins' is assigned a value but never used.","'TextField' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'ListItemText' is defined but never used.","'uploadData' is assigned a value but never used.","'readyData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trentodata'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'summary' is assigned a value but never used.","'risks' is assigned a value but never used.","'roomrisk' is assigned a value but never used.","'individualrisk' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'minmaxTime'. Either include it or remove the dependency array.",["131"],"'setRisk' is assigned a value but never used.","'setDense' is assigned a value but never used.","'secondary' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'renderlist' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [trentodata]",{"range":"136","text":"137"},"Update the dependencies array to be: [minmaxTime]",{"range":"138","text":"139"},[1430,1432],"[trentodata]",[2550,2552],"[minmaxTime]"]