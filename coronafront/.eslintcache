[{"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\index.js":"1","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js":"2","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\App.js":"3","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js":"4","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js":"5","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js":"6","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js":"7","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js":"8"},{"size":517,"mtime":1615535995020,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1615535995832,"results":"11","hashOfConfig":"10"},{"size":2160,"mtime":1615979041729,"results":"12","hashOfConfig":"10"},{"size":2605,"mtime":1615535995718,"results":"13","hashOfConfig":"10"},{"size":1712,"mtime":1615978810813,"results":"14","hashOfConfig":"10"},{"size":2036,"mtime":1615979026024,"results":"15","hashOfConfig":"10"},{"size":6810,"mtime":1615535995369,"results":"16","hashOfConfig":"10"},{"size":2188,"mtime":1615535995635,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"eyjcn6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\index.js",[],["38","39"],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\App.js",["40","41","42","43","44","45","46","47","48"],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js",["49"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction User() {\r\n\r\n    const [user, setUser] = React.useState([]);\r\n\r\n    const getData = async () => {\r\n        fetch('http://localhost:8080/user')\r\n        .then(res => res.text())\r\n        .then(res => setUser({message: res}));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user.map( user =>{\r\n                    return(\r\n                        <div>\r\n                        <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={4}>\r\n                            \r\n                        <ExpansionPanel>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography>\r\n                                    {user.name}\r\n                                </Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Grid container alignItems=\"center\" justify=\"center\">\r\n                                <Grid item xs={11}>\r\n                                    <Typography>\r\n                                        Health: { user.health }\r\n                                    </Typography>\r\n                                </Grid>\r\n                            \r\n                                <Grid item xs={1}>\r\n                                    <IconButton aria-label=\"edit\" >\r\n                                        <EditIcon style={{ color: '#FFFFFF' }}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </Grid>\r\n                        </Grid>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js",["50","51","52","53","54","55","56","57"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction Admin() {\r\n\r\n    const [Logins, setLogins] = React.useState([]);\r\n    const [error, setError] = React.useState('Searching...');\r\n\r\n    const fetchUrl = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/user');\r\n            const json = await response.json();\r\n            setLogins(json);\r\n            setError('');\r\n\r\n        } catch(error) {\r\n            setLogins([]);\r\n            setError('Something went wrong :(');\r\n        }\r\n}\r\n        React.useEffect( () => { fetchUrl() }, []);\r\n\r\n        if (error.length > 0) {\r\n            return(\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                    <p>{ error }</p>\r\n                </Grid>\r\n            );\r\n        }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={4}>\r\n                \r\n                <h2>ADMIN</h2>\r\n\r\n                </Grid>\r\n                </Grid>\r\n                </div>\r\n                    \r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js",["58","59","60"],"import React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction Charts() {\r\n\r\n    const [mins, setMins] = React.useState(5);\r\n\r\n    const [readyData, setReadyData] = React.useState([]);\r\n\r\n    const rawdata = [\r\n        { x: 15, y: 30, timestamp: \"2020-02-11T09:10:30.000Z\", tagId: 1, roomid: 1, },\r\n        { x: 20, y: 17, timestamp: \"2020-02-11T09:18:30.000Z\", tagId: 2, roomid: 2, },\r\n        { x: 13, y: 34, timestamp: \"2020-02-11T09:30:30.000Z\", tagId: 3, roomid: 3, },\r\n        { x: 25, y: 10, timestamp: \"2020-02-11T09:18:30.000Z\", tagId: 4, roomid: 4, },\r\n        { x: 22, y: 19, timestamp: \"2020-02-11T09:17:30.000Z\", tagId: 6, roomid: 5, },\r\n        { x: 12, y: 37, timestamp: \"2020-02-11T09:12:30.000Z\", tagId: 7, roomid: 6, },\r\n        { x: 15, y: 30, timestamp: \"2020-02-11T09:10:30.000Z\", tagId: 5, roomid: 1, },\r\n        { x: 28, y: 13, timestamp: \"2020-02-11T09:24:30.000Z\", tagId: 8, roomid: 7, },\r\n        { x: 16, y: 38, timestamp: \"2020-02-11T09:05:30.000Z\", tagId: 9, roomid: 8, },\r\n        { x: 29, y: 15, timestamp: \"2020-02-11T09:16:30.000Z\", tagId: 10, roomid: 9, },\r\n        { x: 15, y: 31, timestamp: \"2020-02-11T09:32:30.000Z\", tagId: 11, roomid: 10, },\r\n        { x: 26, y: 13, timestamp: \"2020-02-11T09:15:30.000Z\", tagId: 12, roomid: 11, }\r\n    ]\r\n\r\n    let risks = []\r\n\r\n    const checkRisk = () => {\r\n        let i;\r\n        for(i = 0; i < rawdata.length-1; i++){\r\n            console.log(\"I: \" + i);\r\n            let comparable = new Date(rawdata[i].timestamp);\r\n            console.log(\"Comparable: \" + comparable);\r\n            let i2;\r\n\r\n            for(i2 = i+1; i2 < rawdata.length; i2++) {\r\n                console.log(\"I2: \" + i2);\r\n                console.log(\"Compared to: \" + new Date(rawdata[i2].timestamp));\r\n                console.log(\"time comparison: \" + Math.abs(comparable.getTime() - new Date(rawdata[i2].timestamp))/1000/60);\r\n\r\n                if(Math.abs(comparable - new Date(rawdata[i2].timestamp))/1000/60 < mins){\r\n                    let distance = calcDist(rawdata[i], rawdata[i2]);\r\n                    console.log(\"Distance: \" + distance);\r\n                    console.log(\"-----\");\r\n\r\n                    if (distance < 5){\r\n                        risks.push( {\"dist\": distance, \"person1\": rawdata[i].tagId, \"person2\": rawdata[i2].tagId, \"time\": rawdata[i].timestamp} );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(risks);\r\n        console.log(\"---------------------------------------------\")\r\n    }\r\n\r\n    const [earliest, setEarliest] = React.useState(new Date(Math.min(...rawdata.map(e => new Date(e.timestamp)))));\r\n    const [latest, setLatest] = React.useState(new Date(Math.max(...rawdata.map(e => new Date(e.timestamp)))));\r\n\r\n    const filterData = () => {\r\n        let thisdata = rawdata.filter(rawdata => earliest <= new Date(rawdata.timestamp));\r\n        thisdata = thisdata.filter(thisdata => latest >= new Date(thisdata.timestamp));\r\n        setReadyData(thisdata);\r\n    }\r\n\r\n    const calcDist = (posit1, posit2) => {\r\n        let dist1 = Math.pow((posit1.x - posit2.x),2)\r\n        let dist2 = Math.pow((posit1.y - posit2.y),2)\r\n\r\n        return Math.sqrt(Math.abs(dist1+dist2))\r\n    }\r\n\r\n    const data = {\r\n        labels: ['Scatter'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                fill: true,\r\n                backgroundColor: 'rgba(0,0,160,0.4)',\r\n                pointBorderColor: 'rgba(0,0,160,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 3,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: readyData,\r\n                options: {\r\n                    tooltips: {\r\n                        mode: 'index'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        <Grid container item xs={12} spacing={3} justify=\"center\">\r\n                            <Grid item xs={8}>\r\n                                <h2>Charts</h2>\r\n                                <Scatter data={data} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Earliest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setEarliest}\r\n                                    value={earliest}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Latest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setLatest}\r\n                                    value={latest}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n                            <Grid item xs={4}>\r\n                                <Button onClick={filterData} color=\"primary\" variant=\"contained\">\r\n                                    filter\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n                            <form>\r\n                                <Button onClick={checkRisk} color=\"primary\" variant=\"contained\">\r\n                                    get risks\r\n                                </Button>\r\n                            </form>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":26,"nodeType":"67","messageId":"68","endLine":2,"endColumn":36},{"ruleId":"65","severity":1,"message":"69","line":2,"column":38,"nodeType":"67","messageId":"68","endLine":2,"endColumn":51},{"ruleId":"65","severity":1,"message":"70","line":5,"column":40,"nodeType":"67","messageId":"68","endLine":5,"endColumn":48},{"ruleId":"65","severity":1,"message":"71","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":13},{"ruleId":"65","severity":1,"message":"72","line":42,"column":10,"nodeType":"67","messageId":"68","endLine":42,"endColumn":15},{"ruleId":"65","severity":1,"message":"73","line":42,"column":17,"nodeType":"67","messageId":"68","endLine":42,"endColumn":25},{"ruleId":"65","severity":1,"message":"74","line":43,"column":10,"nodeType":"67","messageId":"68","endLine":43,"endColumn":14},{"ruleId":"65","severity":1,"message":"75","line":43,"column":16,"nodeType":"67","messageId":"68","endLine":43,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":61,"column":41,"nodeType":"78","endLine":61,"endColumn":46},{"ruleId":"65","severity":1,"message":"79","line":15,"column":11,"nodeType":"67","messageId":"68","endLine":15,"endColumn":18},{"ruleId":"65","severity":1,"message":"80","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":18},{"ruleId":"65","severity":1,"message":"81","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":22},{"ruleId":"65","severity":1,"message":"82","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":29},{"ruleId":"65","severity":1,"message":"83","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":29},{"ruleId":"65","severity":1,"message":"84","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":22},{"ruleId":"65","severity":1,"message":"85","line":8,"column":8,"nodeType":"67","messageId":"68","endLine":8,"endColumn":18},{"ruleId":"65","severity":1,"message":"86","line":9,"column":8,"nodeType":"67","messageId":"68","endLine":9,"endColumn":16},{"ruleId":"65","severity":1,"message":"87","line":13,"column":12,"nodeType":"67","messageId":"68","endLine":13,"endColumn":18},{"ruleId":"65","severity":1,"message":"88","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"89","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"90","line":11,"column":18,"nodeType":"67","messageId":"68","endLine":11,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'Redirect' is defined but never used.","'Login' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getData' is assigned a value but never used.","'Typography' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'Logins' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'setMins' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]