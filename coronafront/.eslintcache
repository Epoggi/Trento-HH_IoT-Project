[{"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\index.js":"1","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\App.js":"2","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js":"3","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js":"4","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js":"5","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js":"6","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js":"7","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js":"8"},{"size":517,"mtime":1615535995020,"results":"9","hashOfConfig":"10"},{"size":2160,"mtime":1615983078299,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1615535995832,"results":"12","hashOfConfig":"10"},{"size":8055,"mtime":1616163880186,"results":"13","hashOfConfig":"10"},{"size":2605,"mtime":1615535995718,"results":"14","hashOfConfig":"10"},{"size":2036,"mtime":1615982918230,"results":"15","hashOfConfig":"10"},{"size":1712,"mtime":1615978810813,"results":"16","hashOfConfig":"10"},{"size":2188,"mtime":1615535995635,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pw37vz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\index.js",[],["40","41"],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\App.js",["42","43","44","45","46","47","48","49","50"],"import React, { useState } from 'react';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport User from './pages/User'\r\nimport Login from './pages/Login'\r\nimport Admin from './pages/Admin'\r\nimport Charts from './pages/Charts'\r\n\r\nimport SwitchMUI from './pages/SwitchMUI';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides:{\r\n      MuiExpansionPanelSummary: {\r\n          root: {\r\n              backgroundColor: '#2D2D2D',\r\n              borderBottom: '1px solid #151515',\r\n              minHeight: 20,\r\n              marginBottom: -5,\r\n              '&$expanded': {\r\n                minHeight: 20,\r\n              }   \r\n          },\r\n            content: {\r\n              '&$expanded': {\r\n                margin: '12px 0',\r\n              }\r\n          }\r\n      },\r\n      MuiExpansionPanelDetails: {\r\n          root:{\r\n              backgroundColor: '#262626',\r\n              paddingBottom: 8,\r\n              paddingTop: 10,\r\n          }\r\n      }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState();\r\n  const [type, setType] = useState();\r\n\r\n/*   if(!token){\r\n  return(    \r\n    <MuiThemeProvider theme={ theme }>\r\n      <CssBaseline />\r\n      <Login setToken={setToken} setType={setType}/>\r\n    </MuiThemeProvider>\r\n  );\r\n  }\r\n */\r\n  return(\r\n      <MuiThemeProvider theme={ theme }>\r\n          <BrowserRouter>\r\n            <div>\r\n              <CssBaseline />\r\n              <SwitchMUI/>\r\n                <Switch>\r\n                  <Route exact path='/' exact render={(props) => <User/> }/>\r\n                </Switch>\r\n                <Switch>\r\n                  <Route exact path='/admin' render={(props) => <Admin/> }/>\r\n                </Switch> \r\n                <Switch>\r\n                  <Route exact path='/chart' render={(props) => <Charts/> }/>\r\n                </Switch> \r\n            </div>\r\n          </BrowserRouter>\r\n      </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\reportWebVitals.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Charts.js",["51","52","53","54"],"import React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { Button } from '@material-ui/core';\r\nimport DataJson from '../data/csvjson.json'\r\n\r\n\r\nfunction Charts() {\r\n  \r\n    const [mins, setMins] = React.useState(5);\r\n\r\n    const [readyData, setReadyData] = React.useState([]);\r\n\r\n    const trentodata = DataJson;\r\n\r\n    const rawdata = [\r\n        {\r\n            \"name\": \"Location\",\r\n            \"time\": 1614944496619605500,\r\n            \"room\": \"lab\",\r\n            \"tagID\": 2,\r\n            \"x\": 2.693613716183034,\r\n            \"y\": 3.5775570877129788\r\n          },\r\n        { x: 15, y: 30, timestamp: \"2020-02-11T09:10:30.000Z\", tagId: 1, roomid: 1, },\r\n        { x: 20, y: 17, timestamp: \"2020-02-11T09:18:30.000Z\", tagId: 2, roomid: 2, },\r\n        { x: 13, y: 34, timestamp: \"2020-02-11T09:30:30.000Z\", tagId: 3, roomid: 3, },\r\n        { x: 25, y: 10, timestamp: \"2020-02-11T09:18:30.000Z\", tagId: 4, roomid: 4, },\r\n        { x: 22, y: 19, timestamp: \"2020-02-11T09:17:30.000Z\", tagId: 6, roomid: 5, },\r\n        { x: 12, y: 37, timestamp: \"2020-02-11T09:12:30.000Z\", tagId: 7, roomid: 6, },\r\n        { x: 15, y: 30, timestamp: \"2020-02-11T09:10:30.000Z\", tagId: 5, roomid: 1, },\r\n        { x: 28, y: 13, timestamp: \"2020-02-11T09:24:30.000Z\", tagId: 8, roomid: 7, },\r\n        { x: 16, y: 38, timestamp: \"2020-02-11T09:05:30.000Z\", tagId: 9, roomid: 8, },\r\n        { x: 29, y: 15, timestamp: \"2020-02-11T09:16:30.000Z\", tagId: 10, roomid: 9, },\r\n        { x: 15, y: 31, timestamp: \"2020-02-11T09:32:30.000Z\", tagId: 11, roomid: 10, },\r\n        { x: 26, y: 13, timestamp: \"2020-02-11T09:15:30.000Z\", tagId: 12, roomid: 11, }\r\n    ]\r\n\r\n    let risks = []\r\n\r\n    const checkRisk = () => {\r\n        let i;\r\n        for(i = 0; i < trentodata.length-1; i++){\r\n            console.log(\"I: \" + i);\r\n            let comparable = new Date(trentodata[i].time/1000000);\r\n            console.log(\"Comparable: \" + comparable);\r\n            let i2;\r\n\r\n            for(i2 = i+1; i2 < trentodata.length; i2++) {\r\n                console.log(\"I2: \" + i2);\r\n                console.log(\"Compared to: \" + new Date(trentodata[i2].time/1000000));\r\n                console.log(\"time comparison: \" + Math.abs(comparable.getTime() - new Date(trentodata[i2].time/1000000))/1000/60);\r\n\r\n                if(Math.abs(comparable - new Date(trentodata[i2].time/1000000))/1000/60 < mins){\r\n                    let distance = calcDist(trentodata[i], trentodata[i2]);\r\n                    console.log(\"Distance: \" + distance);\r\n                    console.log(\"-----\");\r\n\r\n                    if (distance < 5){\r\n                        risks.push( { \"dist\": distance, \"person1\": trentodata[i].tagID, \"person2\": trentodata[i2].tagID, \"time\": trentodata[i].time} );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(risks);\r\n        console.log(\"---------------------------------------------\")\r\n    }\r\n\r\n    //mahd. spread notaatio. Laskeminen for loopin sisällä. HashMap, hajautus algoritmi.\r\n    /* \r\n    const [earliest, setEarliest] = React.useState(new Date(Math.min(...trentodata.map(e => new Date(e.time/1000000)))));\r\n    const [latest, setLatest] = React.useState(new Date(Math.max(...trentodata.map(e => new Date(e.time/1000000))))); \r\n    */\r\n    const [earliest, setEarliest] = React.useState()\r\n    const [latest, setLatest] = React.useState()\r\n\r\n    useEffect( () => { minmaxTime() }, []);\r\n\r\n    const minmaxTime = () => {\r\n        let i;\r\n        let min = trentodata[0];\r\n        let max = trentodata[0];\r\n        for (i = 0; i < trentodata.length; i++){\r\n        \r\n            if (trentodata[i].time < min.time) {\r\n                min = trentodata[i]\r\n            }\r\n            else if (trentodata[i].time > max.time) {\r\n                max = trentodata[i]\r\n            } \r\n        }\r\n        setEarliest(new Date(min.time/1000000));\r\n        setLatest(new Date(max.time/1000000));\r\n    }\r\n\r\n\r\n    const filterData = () => {\r\n        let thisdata = trentodata.filter(trentodata => earliest <= new Date(trentodata.time/1000000));\r\n        thisdata = thisdata.filter(thisdata => latest >= new Date(thisdata.time/1000000));\r\n        setReadyData(thisdata);\r\n    }\r\n\r\n    const calcDist = (posit1, posit2) => {\r\n        let dist1 = Math.pow((posit1.x - posit2.x),2)\r\n        let dist2 = Math.pow((posit1.y - posit2.y),2)\r\n\r\n        return Math.sqrt(Math.abs(dist1+dist2))\r\n    }\r\n\r\n    const data = {\r\n        labels: ['Scatter'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                fill: true,\r\n                backgroundColor: 'rgba(0,0,160,0.4)',\r\n                pointBorderColor: 'rgba(0,0,160,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 3,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderColor: 'rgba(0,0,160,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: readyData,\r\n                options: {\r\n                    tooltips: {\r\n                        mode: 'index'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n//Warnings: Failed prop type: The prop (justify, direction) need to be set on 'container' element\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        <Grid container item xs={12} spacing={3} justify=\"center\">\r\n                            <Grid item xs={8}>\r\n                                <h2>Charts</h2>\r\n                                <Scatter data={data} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Earliest\r\n                                </Typography>\r\n                                 <DateTimePicker\r\n                                    onChange={setEarliest}\r\n                                    value={earliest}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} justify=\"center\" direction=\"column\">\r\n                                <Typography>\r\n                                    Latest\r\n                                </Typography>\r\n                                <DateTimePicker\r\n                                    onChange={setLatest}\r\n                                    value={latest}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n                            <Grid item xs={4}>\r\n                                <Button onClick={filterData} color=\"primary\" variant=\"contained\">\r\n                                    filter\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n                            <form>\r\n                                <Button onClick={checkRisk} color=\"primary\" variant=\"contained\">\r\n                                    get risks\r\n                                </Button>\r\n                            </form>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\User.js",["55"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction User() {\r\n\r\n    const [user, setUser] = React.useState([]);\r\n\r\n    const getData = async () => {\r\n        fetch('http://localhost:8080/user')\r\n        .then(res => res.text())\r\n        .then(res => setUser({message: res}));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                user.map( user =>{\r\n                    return(\r\n                        <div>\r\n                        <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={4}>\r\n                            \r\n                        <ExpansionPanel>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography>\r\n                                    {user.name}\r\n                                </Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Grid container alignItems=\"center\" justify=\"center\">\r\n                                <Grid item xs={11}>\r\n                                    <Typography>\r\n                                        Health: { user.health }\r\n                                    </Typography>\r\n                                </Grid>\r\n                            \r\n                                <Grid item xs={1}>\r\n                                    <IconButton aria-label=\"edit\" >\r\n                                        <EditIcon style={{ color: '#FFFFFF' }}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </Grid>\r\n                        </Grid>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Login.js",[],"C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\Admin.js",["56","57","58","59","60","61","62","63"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction Admin() {\r\n\r\n    const [Logins, setLogins] = React.useState([]);\r\n    const [error, setError] = React.useState('Searching...');\r\n\r\n    const fetchUrl = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/user');\r\n            const json = await response.json();\r\n            setLogins(json);\r\n            setError('');\r\n\r\n        } catch(error) {\r\n            setLogins([]);\r\n            setError('Something went wrong :(');\r\n        }\r\n}\r\n        React.useEffect( () => { fetchUrl() }, []);\r\n\r\n        if (error.length > 0) {\r\n            return(\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                    <p>{ error }</p>\r\n                </Grid>\r\n            );\r\n        }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                <div>\r\n                <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={4}>\r\n                \r\n                <h2>ADMIN</h2>\r\n\r\n                </Grid>\r\n                </Grid>\r\n                </div>\r\n                    \r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin","C:\\Users\\Kron8\\work\\SofPro\\Trento-HH_IoT-Project\\coronafront\\src\\pages\\SwitchMUI.js",[],["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":26,"nodeType":"72","messageId":"73","endLine":2,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":2,"column":38,"nodeType":"72","messageId":"73","endLine":2,"endColumn":51},{"ruleId":"70","severity":1,"message":"75","line":5,"column":40,"nodeType":"72","messageId":"73","endLine":5,"endColumn":48},{"ruleId":"70","severity":1,"message":"76","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":13},{"ruleId":"70","severity":1,"message":"77","line":42,"column":10,"nodeType":"72","messageId":"73","endLine":42,"endColumn":15},{"ruleId":"70","severity":1,"message":"78","line":42,"column":17,"nodeType":"72","messageId":"73","endLine":42,"endColumn":25},{"ruleId":"70","severity":1,"message":"79","line":43,"column":10,"nodeType":"72","messageId":"73","endLine":43,"endColumn":14},{"ruleId":"70","severity":1,"message":"80","line":43,"column":16,"nodeType":"72","messageId":"73","endLine":43,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":61,"column":41,"nodeType":"83","endLine":61,"endColumn":46},{"ruleId":"70","severity":1,"message":"84","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"85","line":13,"column":18,"nodeType":"72","messageId":"73","endLine":13,"endColumn":25},{"ruleId":"70","severity":1,"message":"86","line":19,"column":11,"nodeType":"72","messageId":"73","endLine":19,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":80,"column":40,"nodeType":"89","endLine":80,"endColumn":42,"suggestions":"90"},{"ruleId":"70","severity":1,"message":"91","line":15,"column":11,"nodeType":"72","messageId":"73","endLine":15,"endColumn":18},{"ruleId":"70","severity":1,"message":"92","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"93","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":22},{"ruleId":"70","severity":1,"message":"94","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":29},{"ruleId":"70","severity":1,"message":"95","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":29},{"ruleId":"70","severity":1,"message":"96","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":22},{"ruleId":"70","severity":1,"message":"97","line":8,"column":8,"nodeType":"72","messageId":"73","endLine":8,"endColumn":18},{"ruleId":"70","severity":1,"message":"98","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":16},{"ruleId":"70","severity":1,"message":"99","line":13,"column":12,"nodeType":"72","messageId":"73","endLine":13,"endColumn":18},{"ruleId":"66","replacedBy":"100"},{"ruleId":"68","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'Redirect' is defined but never used.","'Login' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.","'setMins' is assigned a value but never used.","'rawdata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'minmaxTime'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'getData' is assigned a value but never used.","'Typography' is defined but never used.","'ExpansionPanel' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'Logins' is assigned a value but never used.",["102"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [minmaxTime]",{"range":"107","text":"108"},[3648,3650],"[minmaxTime]"]